/*
 * =====================================================================================
 *
 *       Filename:  cacheTable.h
 *
 *    Description:  cache table , used for cache those number that generated by bloom filter in every block of a bitmap.
 *
 *        Version:  1.0
 *        Created:  07/06/12 08:48:00
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:   (fengyuatad@126.com), yu 
 *        Company:  NDSL
 *
 * =====================================================================================
 */
#ifndef _CACHE_TABLE_H_
#define _CACHE_TABLE_H_

#include "./tableItem.h"
#include "../singleton/singletonBase.h"
#include<iostream>

using namespace std;
#define BITS_PER_BYTE   8
#define ALIGN_BYTES     8
#define MAXLINE         4096
#define COUNT_FOR_BYTE  3
#define INIT_SIZE       512

#define MEGEBTYE          (1024 * 1024)
#define LIMIT_SIZE        (3 * MEGEBTYE)
#define DEFAULT_BLOCK_NUM 10
#define MAX_BLOCK_RANGE   (1 * MEGEBTYE * 8)

class CacheTable
{
    public :
        CacheTable(long long globleSize , int fd);
        ~CacheTable();

        Ret appendItem(long long );
        
    private :
        bool needFlush();
        Ret  flushCache();

    private:
        TableItem **  p_handle;
        size_t        m_cacheSize;
        tagRangeType  m_globleSize;
        unsigned int  m_blockSize;
        unsigned int  m_blockBytes;
        unsigned int  m_sumSize;
        int           f_fd;
};

#endif
